@startuml

class Connect4View {
  + void play()
}

class GameView {
  - Board board
  - Turn turn
  - BoardView boardView
  - [] players
  - PlayerView playerView

  - void getValidAndNonFullColumn()
  + void play()
}

class YesNoDialogView {
  - String question
  - String answer
  
  + read()
  + boolean isAffirmative()
  - boolean isNegative()
}

class BoardView {
  - Board board
  
  + void show()
  + void showWinningMessage()
  + void showTieMessage()
}
class Board {
  - [] cells
  + number ROWS
  + number COLUMNS
  + string EMPTY_CHARACTER

  - void generateCells(Board)
  + array getCells()
  + boolean isConnect4(token)
  + boolean isTie()
  + void add(token, column)
  + Coordinate getCoordinateOfLastAddedToken(token, column) 
  + boolean isThereAGap(column)
}
class Player {
  - Token token
  
  + Token getToken()
}
class PlayerView {
  + number getValidColumn()
}
class Turn {
  - number turn
  - number MAX_PLAYERS
  
  + void nextTurn()
  + number getTurn()
}

class Checker {
  - [][] cells
  
  + boolean review([] Coordinate, coordinateOfLastTokenPlaced)
  
  - boolean isWithinTheRange(coordinate)
}
class Coordinate {
  - number axisX
  - number axisY
  
  + number getAxisX()
  + number getAxisY()
  + Coordinate asYpuAreDisplacedIn(direction)
}

class Token {
  + string RED
  + string YELLOW
}

Connect4View --> YesNoDialogView
Connect4View --> GameView

GameView *-- BoardView
GameView *-- Board
GameView *-- "2" Player
GameView *-- PlayerView
GameView *-- Turn

BoardView *-- Board
BoardView ..> Turn

Board --> "2" Player
Board ..> Checker
Board ..> Coordinate

PlayerView ..> Board
PlayerView ..> Player

Checker ..> Coordinate

Player *-- Token

Coordinate ..> Coordinate
@enduml